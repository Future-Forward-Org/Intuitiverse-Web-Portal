enum RoleEmun {
  ADMIN
  HOST
}

enum Langauge {
  CHINESE
  DANISH
  DUTCH
  ENGLISH
  FINNISH
  FRENCH
  GERMAN
  ITALIAN
  JAPANESE
  NORWEGIAN
  PORTUGUESE
  SPANISH
  SWEDISH
}

type Session @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  startDateTime: AWSDateTime!
  endDateTime: AWSDateTime!
  sessionCode: String
  attendees: [User!] @manyToMany(relationName: "SessionUser")
  host: ID!
}

type TaskStatus @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: User @hasOne
  Progress: String
  taskID: ID! @index(name: "byTask")
  isEnabled: Boolean
}

type Role @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: RoleEmun
  Users: [User] @manyToMany(relationName: "UserRole")
  appID: ID! @index(name: "byApp")
  taskID: ID! @index(name: "byTask")
  displayName: String
}

type DeviceGrantParams {
  expiration: Int
}

type MagicCode @model @auth(rules: [{allow: public}]) {
  id: ID!
  parameters: DeviceGrantParams
  titleText: String
  descriptionText: String
  authUrl: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  userName: String
  Apps: [App] @manyToMany(relationName: "AppUser")
  Roles: [Role] @manyToMany(relationName: "UserRole")
  firstName: String
  lastName: String
  avatarImageURL: String
  avatarUrl: String
  email: AWSEmail
  cognitoId: String
  avatarKey: String
  language: Langauge
  sessionID: ID
  sessions: [Session] @manyToMany(relationName: "SessionUser")
}

type App @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  Users: [User] @manyToMany(relationName: "AppUser")
  Tasks: [Task] @hasMany(indexName: "byApp", fields: ["id"])
  MagicCode: MagicCode @hasOne
  description: String
  buttonName: String
  Roles: [Role] @hasMany(indexName: "byApp", fields: ["id"])
}

type Task @model @auth(rules: [{allow: public}]) {
  id: ID!
  type: String
  name: String
  buttonName: String
  url: AWSURL
  order: Int
  appID: ID! @index(name: "byApp")
  TaskStatuses: [TaskStatus] @hasMany(indexName: "byTask", fields: ["id"])
  Roles: [TaskStatus] @hasMany(indexName: "byTask", fields: ["id"])
}
 